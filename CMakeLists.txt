CMAKE_MINIMUM_REQUIRED(VERSION 3.20)
PROJECT(NTV)
SET(BIN_TARGET ntv)

SET(CMAKE_TOOLCHAIN_FILE D:/Environment/vcpkg-clion/vcpkg/scripts/buildsystems/vcpkg.cmake)

SET(CMAKE_CXX_STANDARD 26)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/source SOURCE_FILE)
ADD_EXECUTABLE(${BIN_TARGET} main.cc ${SOURCE_FILE})

IF (WIN32)
    SET(PCAP_LIB_NAME wpcap)
    TARGET_LINK_LIBRARIES(${BIN_TARGET} PRIVATE ws2_32)
ELSE ()
    SET(PCAP_LIB_NAME pcap)
ENDIF ()

FIND_LIBRARY(PCAP_LIBRARY ${PCAP_LIB_NAME} PATHS D:/Environment/vcpkg-clion/vcpkg/installed/x64-windows)
IF (PCAP_LIBRARY AND PCAP_INCLUDE_DIR)
    MESSAGE(STATUS "PCAP_LIBRARY: ${PCAP_LIBRARY}")
    TARGET_LINK_LIBRARIES(${BIN_TARGET} PRIVATE ${PCAP_LIBRARY})
ENDIF ()


FIND_PATH(PCAP_INCLUDE_DIR pcap.h PATHS D:/Environment/vcpkg-clion/vcpkg/packages/winpcap_x64-windows)
IF (PCAP_INCLUDE_DIR)
    MESSAGE(STATUS "PCAP_INCLUDE: ${PCAP_INCLUDE_DIR}")
    TARGET_INCLUDE_DIRECTORIES(${BIN_TARGET} PRIVATE ${PCAP_INCLUDE_DIR})
ENDIF ()


FIND_PACKAGE(OpenCV REQUIRED)
IF (OpenCV_FOUND)
    MESSAGE(STATUS "OpenCV_INCLUDE: ${OpenCV_INCLUDE_DIRS}")
    MESSAGE(STATUS "OpenCV_LIBRARY: ${OpenCV_LIBS}")
    TARGET_INCLUDE_DIRECTORIES(${BIN_TARGET} PRIVATE ${OpenCV_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(${BIN_TARGET} PRIVATE ${OpenCV_LIBS})
ENDIF ()

ADD_SUBDIRECTORY(vendor/WinToast-1.3.1)
#SET(WINTOASTLIB_BUILD_EXAMPLES OFF)
TARGET_LINK_LIBRARIES(${BIN_TARGET} PRIVATE WinToast)

# 如果子项目没有自动设置 include 目录，也可以手动指定
TARGET_INCLUDE_DIRECTORIES(${BIN_TARGET} PRIVATE ${PROJECT_SOURCE_DIR}/vendor/WinToast-1.3.1/include)


ADD_CUSTOM_COMMAND(
        TARGET ${BIN_TARGET}
        POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy
        "$<TARGET_FILE:${BIN_TARGET}>"
        "D:/Software/Portable/bin/$<TARGET_FILE_NAME:${BIN_TARGET}>"
        COMMENT "发布可执行文件到 D:\\Software\\Portable\\bin"
        VERBATIM
)